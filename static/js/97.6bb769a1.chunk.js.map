{"version":3,"file":"static/js/97.6bb769a1.chunk.js","mappings":"yLA0DA,UArD+B,WAC3B,OAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OACT,eAJKC,EAAK,KAAEC,EAAQ,KAMfC,GAAMC,EAAAA,EAAAA,MAAND,IAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,yCAAG,yFAKX,OAJJJ,GAAS,SAAAK,GAAS,yBACXA,GAAS,IACZR,SAAS,EACTC,MAAO,MAAI,IACX,mBAEqBQ,EAAAA,EAAAA,IAAgBL,GAAI,KAAD,EAAlCM,EAAM,OACZP,GAAS,SAAAK,GACL,OAAO,kBACAA,GAAS,IACZT,MAAOW,GAEf,IAAG,gDAGHP,GAAS,SAAAK,GAAS,yBACXA,GAAS,IACZP,MAAK,UACL,QAOD,OAPC,UAGJE,GAAS,SAAAK,GACL,OAAO,kBACAA,GAAS,IACZR,SAAS,GACjB,IAAG,4EAEV,kBA5Be,mCA6BhBO,GACJ,GAAG,CAACH,EAAID,IAER,IAEMQ,EAFUT,EAATH,MAEgBa,KAAI,gBAAER,EAAE,EAAFA,GAAIS,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OAAM,2BAAa,yBAAG,SAAOF,EAAK,aAAWC,MAAU,uBAAIC,MAA5CX,EAA0D,IAE3H,OACI,gBAAKY,UAAU,YAAW,UACtB,wBAAKL,KAGjB,C,qJCtDMM,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,6CACTC,OAAQ,CACJC,OAAQ,MAIHC,EAAQ,yCAAG,yGAAe,OAATC,EAAK,+BAAG,EAAC,SACdN,EAASO,IAAI,IAAK,CACnCJ,OAAQ,CACJG,MAAAA,KAEN,OAJS,OAIT,SAJKE,EAAI,EAAJA,KAAI,kBAMJA,GAAI,2CACd,kBARoB,mCAURC,EAAa,yCAAG,WAAMtB,GAAE,8FACZa,EAASO,IAAI,IAAD,OAAKpB,IAAK,OAAhC,OAAgC,SAApCqB,EAAI,EAAJA,KAAI,kBAEJA,GAAI,2CACd,gBAJyB,sCAMbE,EAAW,yCAAG,WAAOC,GAAC,8FACVX,EAASO,IAAI,IAAK,CACnCJ,OAAQ,CACJQ,EAAAA,KAEN,OAJS,OAIT,SAJKH,EAAI,EAAJA,KAAI,kBAKJA,GAAI,2CACd,gBAPuB,sCASXhB,EAAe,yCAAG,WAAOL,GAAE,8FACfa,EAASO,IAAI,IAAD,OAAKpB,EAAE,cAAY,OAAzC,OAAyC,SAA7CqB,EAAI,EAAJA,KAAI,kBAEJA,GAAI,2CACd,gBAJ2B,qC","sources":["pages/SinglePostCommentsPage/SinglePostsCommentsPage.jsx","shared/api/posts.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nimport {getPostComments} from '../../shared/api/posts';\r\n\r\nconst SinglePostCommentsPage = () => {\r\n    const [state, setState] = useState({\r\n        items: [],\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async() => {\r\n            setState(prevState => ({\r\n                ...prevState, \r\n                loading: true,\r\n                error: null,\r\n            }));\r\n            try {\r\n                const result = await getPostComments(id);\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        items: result,\r\n                    }\r\n                });\r\n            }\r\n            catch (error) {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    error,\r\n                }));\r\n            }\r\n            finally {\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState, \r\n                        loading: false }\r\n                });\r\n            }\r\n        }\r\n        fetchPosts();\r\n    }, [id, setState])\r\n\r\n    const {items} = state;\r\n\r\n    const elements = items.map(({id, name, email, body}) => <li key={id}><p>Name: {name}. E-mail: {email}</p><p>{body}</p></li>)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <ul>{elements}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePostCommentsPage;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\r\n    params: {\r\n        _limit: 12,\r\n    }\r\n});\r\n\r\nexport const getPosts = async(_page = 1) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            _page,\r\n        }\r\n    })\r\n    \r\n    return data;\r\n}\r\n\r\nexport const getSinglePost = async(id) => {\r\n    const {data} = await instance.get(`/${id}`)\r\n    \r\n    return data;\r\n}\r\n\r\nexport const searchPosts = async (q) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            q,\r\n        }\r\n    })\r\n    return data;\r\n}\r\n\r\nexport const getPostComments = async (id) => {\r\n    const {data} = await instance.get(`/${id}/comments`)\r\n\r\n    return data;\r\n}"],"names":["useState","items","loading","error","state","setState","id","useParams","useEffect","fetchPosts","prevState","getPostComments","result","elements","map","name","email","body","className","instance","axios","baseURL","params","_limit","getPosts","_page","get","data","getSinglePost","searchPosts","q"],"sourceRoot":""}