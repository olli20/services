{"version":3,"file":"static/js/547.5474eacd.chunk.js","mappings":"sIAGMA,EAAY,SAAH,GAAiB,IAAZC,EAAK,EAALA,MACVC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAEC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAE,OAAM,yBACxC,SAAC,KAAI,CAACC,MAAO,CAACC,KAAMP,GAAWQ,GAAE,0BAAqBH,GAAK,SAAED,KADZC,EAC8B,IACnF,OAAO,wBAAKH,GAChB,EAEA,MAEAJ,EAAUW,aAAe,CACrBV,MAAO,G,wJC4CX,EApDc,WACV,OAA0BW,EAAAA,EAAAA,UAAS,CAC/BX,MAAO,GACPY,SAAS,EACTC,MAAO,OACT,eAJKN,EAAK,KAAEO,EAAQ,MAMtBC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,yCAAG,yFAKX,OAJJF,GAAS,SAAAG,GAAS,yBACXA,GAAS,IACZL,SAAS,EACTC,MAAO,MAAI,IACX,mBAEqBK,EAAAA,EAAAA,MAAW,KAAD,EAAzBC,EAAM,OACZL,GAAS,SAAAG,GACL,OAAO,kBACAA,GAAS,IACZjB,MAAM,GAAD,eAAMiB,EAAUjB,QAAK,OAAKmB,KAEvC,IAAG,gDAGHL,GAAS,SAAAG,GAAS,yBACXA,GAAS,IACZJ,MAAK,UACL,QAOD,OAPC,UAGJC,GAAS,SAAAG,GACL,OAAO,kBACAA,GAAS,IACZL,SAAS,GACjB,IAAG,4EAEV,kBA5Be,mCA6BhBI,GACJ,GAAG,CAACF,IAEJ,IAAOd,EAAyBO,EAAzBP,MAAOY,EAAkBL,EAAlBK,QAASC,EAASN,EAATM,MAEvB,OACI,2BACKb,EAAMoB,OAAS,IAAK,SAACrB,EAAA,EAAS,CAACC,MAAOA,IACtCY,IAAW,uBAAG,mBACdC,IAAS,uBAAG,iBAIzB,EC7CA,EATiB,WACb,OACI,iBAAKQ,UAAU,YAAW,WACtB,wBAAI,eACJ,SAAC,EAAK,MAGlB,C,qJCPMC,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,6CACTC,OAAQ,CACJC,OAAQ,MAIHR,EAAQ,yCAAG,yGAAe,OAATS,EAAK,+BAAG,EAAC,SACdL,EAASM,IAAI,IAAK,CACnCH,OAAQ,CACJE,MAAAA,KAEN,OAJS,OAIT,SAJKE,EAAI,EAAJA,KAAI,kBAMJA,GAAI,2CACd,kBARoB,mCAURC,EAAa,yCAAG,WAAMxB,GAAE,8FACZgB,EAASM,IAAI,IAAD,OAAKtB,IAAK,OAAhC,OAAgC,SAApCuB,EAAI,EAAJA,KAAI,kBAEJA,GAAI,2CACd,gBAJyB,sCAMbE,EAAW,yCAAG,WAAOC,GAAC,8FACVV,EAASM,IAAI,IAAK,CACnCH,OAAQ,CACJO,EAAAA,KAEN,OAJS,OAIT,SAJKH,EAAI,EAAJA,KAAI,kBAKJA,GAAI,2CACd,gBAPuB,sCASXI,EAAe,yCAAG,WAAO3B,GAAE,8FACfgB,EAASM,IAAI,IAAD,OAAKtB,EAAE,cAAY,OAAzC,OAAyC,SAA7CuB,EAAI,EAAJA,KAAI,kBAEJA,GAAI,2CACd,gBAJ2B,qC","sources":["modules/PostsList/PostsList.jsx","modules/Posts/Posts.jsx","pages/HomePage/HomePage.jsx","shared/api/posts.js"],"sourcesContent":["import {Link, useLocation} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostsList = ({items}) => {\r\n    const location = useLocation();\r\n\r\n    const elements = items.map(({title, id}) => <li key={id}>\r\n        <Link state={{from: location}} to={`/services/posts/${id}`}>{title}</Link></li>);\r\n    return <ol>{elements}</ol>;\r\n}\r\n\r\nexport default PostsList;\r\n\r\nPostsList.defaultProps = {\r\n    items: [],\r\n}\r\n\r\nPostsList.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n}","import {useState, useEffect} from 'react';\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\n\r\nimport {getPosts} from '../../shared/api/posts';\r\n\r\nconst Posts = () => {\r\n    const [state, setState] = useState({\r\n        items: [],\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async() => {\r\n            setState(prevState => ({\r\n                ...prevState, \r\n                loading: true,\r\n                error: null,\r\n            }));\r\n            try {\r\n                const result = await getPosts();\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        items: [...prevState.items, ...result]\r\n                    }\r\n                });\r\n            }\r\n            catch (error) {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    error,\r\n                }));\r\n            }\r\n            finally {\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState, \r\n                        loading: false }\r\n                });\r\n            }\r\n        }\r\n        fetchPosts();\r\n    }, [setState])\r\n\r\n    const {items, loading, error} = state;\r\n\r\n    return (\r\n        <div> \r\n            {items.length > 0 && <PostsList items={items} />}\r\n            {loading && <p>load posts ...</p>}\r\n            {error && <p>failed ...</p>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Posts;","import Posts from '../../modules/Posts/Posts';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Home page</h2>\r\n            <Posts />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\r\n    params: {\r\n        _limit: 12,\r\n    }\r\n});\r\n\r\nexport const getPosts = async(_page = 1) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            _page,\r\n        }\r\n    })\r\n    \r\n    return data;\r\n}\r\n\r\nexport const getSinglePost = async(id) => {\r\n    const {data} = await instance.get(`/${id}`)\r\n    \r\n    return data;\r\n}\r\n\r\nexport const searchPosts = async (q) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            q,\r\n        }\r\n    })\r\n    return data;\r\n}\r\n\r\nexport const getPostComments = async (id) => {\r\n    const {data} = await instance.get(`/${id}/comments`)\r\n\r\n    return data;\r\n}"],"names":["PostsList","items","location","useLocation","elements","map","title","id","state","from","to","defaultProps","useState","loading","error","setState","useEffect","fetchPosts","prevState","getPosts","result","length","className","instance","axios","baseURL","params","_limit","_page","get","data","getSinglePost","searchPosts","q","getPostComments"],"sourceRoot":""}