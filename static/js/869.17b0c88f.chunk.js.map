{"version":3,"file":"static/js/869.17b0c88f.chunk.js","mappings":"mMAkEA,UA7DuB,WAAO,IAAD,EACzB,GAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,KAAM,CAAC,EACPC,SAAS,EACTC,MAAO,OACT,eAJKC,EAAK,KAAEC,EAAQ,KAMfC,GAAMC,EAAAA,EAAAA,MAAND,GACDE,GAAWC,EAAAA,EAAAA,MAGXC,GAAqB,QAAd,GADIC,EAAAA,EAAAA,MACKP,aAAK,aAAd,EAAgBM,OAAQ,aAErCE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,yCAAG,yFAKX,OAJJR,GAAS,SAAAS,GAAS,yBACXA,GAAS,IACZZ,SAAS,EACTC,MAAO,MAAI,IACX,mBAEqBY,EAAAA,EAAAA,IAAcT,GAAI,KAAD,EAAhCU,EAAM,OACZX,GAAS,SAAAS,GACL,OAAO,kBACAA,GAAS,IACZb,KAAMe,GAEd,IAAG,gDAGHX,GAAS,SAAAS,GAAS,yBACXA,GAAS,IACZX,MAAK,UACL,QAOD,OAPC,UAGJE,GAAS,SAAAS,GACL,OAAO,kBACAA,GAAS,IACZZ,SAAS,GACjB,IAAG,4EAEV,kBA5Be,mCA6BhBW,GACJ,GAAG,CAACP,EAAID,IAER,IAEA,EAAsBD,EAAMH,KAArBgB,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACd,OACI,iBAAKC,UAAU,YAAW,WACtB,mBAAQC,QALD,WAAH,OAASZ,EAASE,EAAM,EAKHW,KAAK,SAAQ,SAAC,aACvC,wBAAI,sBACJ,wBAAKJ,KACL,uBAAIC,KACJ,SAAC,KAAI,CAACd,MAAO,CAACM,KAAAA,GAAOY,GAAE,0BAAqBhB,EAAE,aAAY,SAAC,cAC3D,SAAC,KAAM,MAGnB,C,qJC9DMiB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,6CACTC,OAAQ,CACJC,OAAQ,MAIHC,EAAQ,yCAAG,yGAAe,OAATC,EAAK,+BAAG,EAAC,SACdN,EAASO,IAAI,IAAK,CACnCJ,OAAQ,CACJG,MAAAA,KAEN,OAJS,OAIT,SAJKE,EAAI,EAAJA,KAAI,kBAMJA,GAAI,2CACd,kBARoB,mCAURhB,EAAa,yCAAG,WAAMT,GAAE,8FACZiB,EAASO,IAAI,IAAD,OAAKxB,IAAK,OAAhC,OAAgC,SAApCyB,EAAI,EAAJA,KAAI,kBAEJA,GAAI,2CACd,gBAJyB,sCAMbC,EAAW,yCAAG,WAAOC,GAAC,8FACVV,EAASO,IAAI,IAAK,CACnCJ,OAAQ,CACJO,EAAAA,KAEN,OAJS,OAIT,SAJKF,EAAI,EAAJA,KAAI,kBAKJA,GAAI,2CACd,gBAPuB,sCASXG,EAAe,yCAAG,WAAO5B,GAAE,8FACfiB,EAASO,IAAI,IAAD,OAAKxB,EAAE,cAAY,OAAzC,OAAyC,SAA7CyB,EAAI,EAAJA,KAAI,kBAEJA,GAAI,2CACd,gBAJ2B,qC","sources":["pages/SinglePostPage/SinglePostPage.jsx","shared/api/posts.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {Link, Outlet, useParams, useNavigate, useLocation} from 'react-router-dom';\r\n\r\nimport {getSinglePost} from '../../shared/api/posts';\r\n\r\nconst SinglePostPage = () => {\r\n    const [state, setState] = useState({\r\n        item: {},\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const {id} = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const location = useLocation();\r\n    const from = location.state?.from || \"/services\";\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async() => {\r\n            setState(prevState => ({\r\n                ...prevState, \r\n                loading: true,\r\n                error: null,\r\n            }));\r\n            try {\r\n                const result = await getSinglePost(id);\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        item: result,\r\n                    }\r\n                });\r\n            }\r\n            catch (error) {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    error,\r\n                }));\r\n            }\r\n            finally {\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState, \r\n                        loading: false }\r\n                });\r\n            }\r\n        }\r\n        fetchPosts();\r\n    }, [id, setState])\r\n\r\n    const goBack = () => navigate(from);\r\n\r\n    const {title, body} = state.item;\r\n    return (\r\n        <div className=\"container\">\r\n            <button onClick={goBack} type=\"button\">Go Back</button>\r\n            <h2>Single Post Page</h2>\r\n            <h3>{title}</h3>\r\n            <p>{body}</p>\r\n            <Link state={{from}} to={`/services/posts/${id}/comments`}>Comments</Link>\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePostPage;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\r\n    params: {\r\n        _limit: 12,\r\n    }\r\n});\r\n\r\nexport const getPosts = async(_page = 1) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            _page,\r\n        }\r\n    })\r\n    \r\n    return data;\r\n}\r\n\r\nexport const getSinglePost = async(id) => {\r\n    const {data} = await instance.get(`/${id}`)\r\n    \r\n    return data;\r\n}\r\n\r\nexport const searchPosts = async (q) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            q,\r\n        }\r\n    })\r\n    return data;\r\n}\r\n\r\nexport const getPostComments = async (id) => {\r\n    const {data} = await instance.get(`/${id}/comments`)\r\n\r\n    return data;\r\n}"],"names":["useState","item","loading","error","state","setState","id","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchPosts","prevState","getSinglePost","result","title","body","className","onClick","type","to","instance","axios","baseURL","params","_limit","getPosts","_page","get","data","searchPosts","q","getPostComments"],"sourceRoot":""}