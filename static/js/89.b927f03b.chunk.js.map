{"version":3,"file":"static/js/89.b927f03b.chunk.js","mappings":"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","sources":["modules/PostsList/PostsList.jsx","modules/PostsSearchForm/PostsSearchForm.jsx","pages/PostsSearchPage/PostsSearchPage.jsx","shared/api/posts.js"],"sourcesContent":["import {Link, useLocation} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostsList = ({items}) => {\r\n    const location = useLocation();\r\n\r\n    const elements = items.map(({title, id}) => <li key={id}>\r\n        <Link state={{from: location}} to={`/services/posts/${id}`}>{title}</Link></li>);\r\n    return <ol>{elements}</ol>;\r\n}\r\n\r\nexport default PostsList;\r\n\r\nPostsList.defaultProps = {\r\n    items: [],\r\n}\r\n\r\nPostsList.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n}","import {useState} from 'react';\r\n\r\nconst PostsSearchForm = ({onSubmit}) => {\r\n    const [state, setState] = useState({\r\n        search: \"\"\r\n    });\r\n\r\n    const handleChange = ({target}) => {\r\n        const {name, value} = target;\r\n        setState(prevState => {\r\n           return  {...prevState, [name]: value,}\r\n        })\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        onSubmit({...state});\r\n        setState({\r\n            search: \"\",\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                name=\"search\"\r\n                value={state.search}\r\n                onChange={handleChange} \r\n                placeholder=\"Searchposts\"\r\n            />\r\n            <button type=\"submit\">Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostsSearchForm;","import {useState, useEffect} from 'react';\r\nimport {useSearchParams} from 'react-router-dom';\r\n\r\nimport PostsSearchForm from '../../modules/PostsSearchForm/PostsSearchForm';\r\nimport PostList from '../../modules/PostsList/PostsList';\r\n\r\nimport {searchPosts} from '../../shared/api/posts';\r\n\r\nconst PostsSearchPage = () => {\r\n    const [state, setState] = useState({\r\n        items: [],\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const search = searchParams.get(\"search\");\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async() => {\r\n            try {\r\n                setState(prevState =>({\r\n                    ...prevState,\r\n                    loading: true,\r\n                }));\r\n                const data = await searchPosts (search);\r\n                setState(prevState =>({\r\n                    ...prevState,\r\n                    items: data,\r\n                }));\r\n            } catch (error) {\r\n                setState(prevState =>({\r\n                    ...prevState,\r\n                    error,\r\n                }));\r\n            } finally {\r\n                setState(prevState =>({\r\n                    ...prevState,\r\n                    loading: false,\r\n                }));\r\n            }\r\n        }\r\n\r\n        if(search) {\r\n            fetchPosts()\r\n        }\r\n    }, [search]);\r\n\r\n    const changeSearch = ({search}) => {\r\n        setSearchParams({search});\r\n    }\r\n\r\n    const {items} = state;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Posts search page</h2>\r\n            <PostsSearchForm onSubmit={changeSearch} />\r\n            {items.length > 0 && <PostList items={items} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsSearchPage;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\r\n    params: {\r\n        _limit: 12,\r\n    }\r\n});\r\n\r\nexport const getPosts = async(_page = 1) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            _page,\r\n        }\r\n    })\r\n    \r\n    return data;\r\n}\r\n\r\nexport const getSinglePost = async(id) => {\r\n    const {data} = await instance.get(`/${id}`)\r\n    \r\n    return data;\r\n}\r\n\r\nexport const searchPosts = async (q) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            q,\r\n        }\r\n    })\r\n    return data;\r\n}\r\n\r\nexport const getPostComments = async (id) => {\r\n    const {data} = await instance.get(`/${id}/comments`)\r\n\r\n    return data;\r\n}"],"names":["PostsList","items","location","useLocation","elements","map","title","id","state","from","to","defaultProps","onSubmit","useState","search","setState","event","preventDefault","type","name","value","onChange","target","prevState","placeholder","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchPosts","searchPosts","data","className","length","instance","axios","baseURL","params","_limit","getPosts","_page","getSinglePost","q","getPostComments"],"sourceRoot":""}